<!DOCTYPE html>
<html>

<head>

    <META HTTP-EQUIV="content-type" CONTENT="text/html; charset=utf-8">
    <title>
        <%= title %>
    </title>
    <!-- CSS -->
    <link rel="stylesheet" href="/libs/bootstrap/dist/css/bootstrap.min.css">

    <link rel="stylesheet" href="/stylesheets/custom.css">
    <link rel="stylesheet" href="//rawgithub.com/Caged/d3-tip/master/examples/example-styles.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="//d3js.org/d3.v2.min.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.6.2.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/svg-pan-zoom@3.5.0/dist/svg-pan-zoom.min.js"></script>


    <script type="text/javascript" src="/tipsy.js"></script>

    <style>
        @import url(/stylesheets/style.css?aea6f0a);
    </style>

    <script>
        function spiralAlphabetSubmit() {
            $("#mainForm").attr('action', '/test/alphabetSpiral');
            $("#mainForm").submit();
        }

        function spiralSubmit() {
            $("#mainForm").attr('action', '/test/spiral');
            $("#mainForm").submit();
        }

        function normalSubmit() {
            $("#mainForm").attr('action', '/test/epochValues');
            $("#mainForm").submit();
        }

        $('document').ready(function() {
            $("#viewChanger").live('change', function(e) {
                e.preventDefault();
                selValue = $("#viewChanger").val();

                if (selValue != 0) {
                    $("#mainForm").attr('action', selValue);

                    if (selValue == "/test/alphabetSpiral") {
                        filter = $("#filter").val();
                        if (filter.length != 0) {
                            $("#mainForm").submit();
                        } else {
                            $("#filter").parent().addClass("has-error");
                            $("#helpBlock2").html("Please insert some character");
                        }
                    } else {
                        $("#mainForm").submit();
                    }

                }
            });
        });
    </script>

</head>

<body>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="sidebar col-md-2">
                        <form action="/test/epochValues" method="post" id="mainForm" class="mmargin-top" enctype="multipart/form-data">
                            <input type="button" class="btn btn-info" value="Back to Home" onclick="window.location.href='http://localhost:3000/test/'" /><br><br>
                            <h5>Epoch Values :</h5>
                            <div class="form-group">
                                <input type="text" style="width:auto" class="col-md-11 form-control" onkeypress='return event.charCode >= 48 && event.charCode <= 57' placeholder="EpochMin" name="epochMin" id="epochMin" value="<%= minEpochs || 1 %>" />
                                <div class="mtooltip"><i class="fa fa-info-circle" aria-hidden="true"></i>
                                    <span class="mtooltiptext">Epoch is always a number. Please enter the minimum number of epoch you want to search.</span>
                                </div>
                            </div><br>
                            <div class="form-group">
                                <input type="text" style="width:auto" class="col-md-11 form-control" onkeypress='return event.charCode >= 48 && event.charCode <= 57' placeholder="Epoch Max" name="epochMax" id="epochMax" value="<%= maxEpochs || epochs %>" />
                                <div class="mtooltip"><i class="fa fa-info-circle" aria-hidden="true"></i>
                                    <span class="mtooltiptext">Epoch is always a number. Please enter the maximum number of epoch you want to search.</span>
                                </div>
                            </div>
                            <br>
                            <h5>Character :</h5>
                            <div class="form-group">
                                <span id="helpBlock2" style= "color:#FFFFFF" class="help-block"></span>
                                <input type="text" class="form-control" id="filter" name="filter" value="<%= filters %>" placeholder="Filter Character" />
                            </div>
                            <br>
                            <h5>Select View :</h5>
                            <select class="form-control" name="viewChanger" id="viewChanger">
                              <option value="0">Please Select</option>
                              <option disabled value="/test/epochValues" >Matrix View</option>  
                              <option value="/test/spiral" >Spiral View</option>
                              <option value="/test/alphabetSpiral" >Character View</option>
                            </select>
                            <br>
                            <button onclick="normalSubmit()" class="btn btn-primary" id="normalSubmit" value="Upload/Refresh" name="nsubmit">Upload/Refresh</button>
                        </form>
                    </div>
                    <div class="mainbar col-md-7">
                        <h3>Co-Occurrence Matrix</h3>
                        <div id="graph">

                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="infoBarTop">
                            <p>This data set has <span><%= epochs %> </span>epochs.</p>
                            <p>Total Character Selected: <span> <%= totalCharac %> </span></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function() {
            $(".sidebar").css('height', $(document).height());
        });
        /* implementation heavily influenced by http://bl.ocks.org/1166403 */

        nodes = <%- JSON.stringify(nodes) %>;
        graph = <%- JSON.stringify(graph) %>;

        var maxNum = Math.max.apply(Math, graph.map(function(o) {
            return o.value;
        }));

        console.log(maxNum);

        //console.log(nodes);

        var margin = {
                top: 80,
                right: 0,
                bottom: 10,
                left: 80
            },
            width = 880,
            height = 880;

        var x = d3.scale.ordinal().rangeBands([0, width]),
            z = d3.scale.linear().domain([0, 4]).clamp(true),
            c = d3.scale.category10().domain(d3.range(10));

        var svg = d3.select("#graph").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .style("margin-left", -margin.left + "px")
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.append("rect")
            .attr("class", "background")
            .attr("width", width)
            .attr("height", height);

        for (var ab = 0; ab < 102; ab++) {
            var matrix = [],
                nodes = nodes,
                n = nodes.length;

            // Compute index per node.
            nodes.forEach(function(node, i) {
                node.index = i;
                node.count = 0;
                matrix[i] = d3.range(n).map(function(j) {
                    return {
                        x: j,
                        y: i,
                        z: 0
                    };
                });

            });

            // Convert links to matrix; count character occurrences.

            graph.forEach(function(link) {

                if (typeof matrix[link.source] != 'undefined' && typeof matrix[link.source][link.target] != 'undefined') {

                    matrix[link.source][link.target].z += link.value;
                    matrix[link.target][link.source].z += link.value;
                    matrix[link.source][link.source].z += link.value;
                    matrix[link.target][link.target].z += link.value;
                    nodes[link.source].count += link.value;
                    nodes[link.target].count += link.value;

                }

            });

            //Precompute the orders.
            var orders = {
                name: d3.range(n).sort(function(a, b) {
                    return d3.ascending(nodes[a].name, nodes[b].name);
                }),
                count: d3.range(n).sort(function(a, b) {
                    return nodes[b].count - nodes[a].count;
                })
            };

            // The default sort order.
            x.domain(orders.name);

            row = svg.selectAll(".row")
                .data(matrix)
                .enter().append("g")
                .attr("class", "row")
                .attr("transform", function(d, i) {
                    return "translate(0," + x(i) + ")";
                })
                .each(row);

            row.append("line")
                .attr("x2", width);

            row.append("text")
                .attr("x", -6)
                .attr("y", x.rangeBand() / 2)
                .attr("dy", ".32em")
                .attr("class", "zoom")
                .attr("text-anchor", "end")
                .text(function(d, i) {
                    return nodes[i].name;
                });

            var column = svg.selectAll(".column")
                .data(matrix)
                .enter().append("g")
                .attr("class", "column")
                .attr("transform", function(d, i) {
                    return "translate(" + x(i) + ")rotate(-90)";
                });

            column.append("line")
                .attr("x1", -width);

            column.append("text")
                .attr("x", 6)
                .attr("y", x.rangeBand() / 2)
                .attr("dy", ".32em")
                .attr("class", "zoom")
                .attr("text-anchor", "start")
                .text(function(d, i) {
                    return nodes[i].name;
                });

            function row(row) {
                var cell = d3.select(this).selectAll(".cell")
                    .data(row.filter(function(d) {
                        return d.z;
                    }))
                    .enter().append("rect")
                    .attr("class", "cell")
                    .attr("x", function(d) {
                        return x(d.x);
                    })
                    .attr("width", x.rangeBand())
                    .attr("height", x.rangeBand())
                    .style("fill-opacity", function(d) {
                        return z(d.z / 1000);
                    })
                    .style("fill", function(d) {
                        return nodes[d.x].group == nodes[d.y].group ? c(nodes[d.x].group) : null;
                    })
                    .on("mouseover", mouseover)
                    .on("mouseout", mouseout);
            }

            function mouseover(p) {
                d3.selectAll(".row text").classed("active", function(d, i) {
                    return i == p.y;
                });
                d3.selectAll(".column text").classed("active", function(d, i) {
                    return i == p.x;
                });

            }

            function mouseout() {
                d3.selectAll("text").classed("active", false);

            }

            $('.cell').tipsy({
                gravity: 'w',
                html: true,
                title: function() {
                    var d = this.__data__;
                    // console.log(d);
                    // var x = d.xvalue;
                    // var y = d.yvalue;
                    return 'Matched value : ' + d.z;
                }
            });

        }
    </script>
</body>

</html>